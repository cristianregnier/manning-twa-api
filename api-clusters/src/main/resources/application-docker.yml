management:
  health.db.enabled: false
  endpoints:    
    web:
      base-path: /
      exposure:
        include: "*"

server:
  port: 4070
  servlet:
    context-path: /api/flights/clusters
  compression:
    enabled: true
    mime-types: application/json

jetty:
  threadPool:
    maxThreads: 10
    minThreads: 10

chaos:
  monkey:
    enabled: false
    watcher:
      restController: true
    assaults:
      exceptionsActive: true
      latencyActive: true   
      latencyRangeStart: 10
      latencyRangeEnd: 5000  
      
spring:
  profiles:
    active: default

connector:
   catalog:
      host: varnish:80
      responseTimeout: 2000
      connectionTimeout: 2000
      readTimeout: 2000
   pricing:
      host: api-pricing:5070
      responseTimeout: 10000
      connectionTimeout: 10000
      readTimeout: 10000   
   itineraries-search:
      host: api-itineraries-search:7070
      responseTimeout: 10000
      connectionTimeout: 10000
      readTimeout: 10000

cache:
  expireAfterWriteTime: 1

redis:
  host: api-clusters-remote-cache
  port: 6379

zookeeper:
  host: zookeeper:2181
  maxRetries: 2
  timeBetweenRetries: 100
  connectionTimeout: 1000

resilience4j.circuitbreaker:
  instances:
    priceItineraries:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
      recordExceptions:
        - java.lang.RuntimeException
        - io.netty.handler.timeout.ReadTimeoutException
        - com.twa.flights.api.clusters.exception.TWAException

resilience4j.ratelimiter:
  instances:
    priceItineraries:
      registerHealthIndicator: true
      timeoutDuration: 1000ms
      limitRefreshPeriod: 10s
      limitForPeriod: 2